# Digital Ocean CI/CD build
# version: 2.1
# orbs:
#   doctl: digitalocean/cli@0.1.1
#   kubernetes: circleci/kubernetes@1.3.0
# jobs:
#   build:
#     working_directory: ~/repo
#     docker:
#       - image: circleci/golang:1.16
#     steps:
#       - checkout
#       - kubernetes/install-kubectl
#       - setup_remote_docker:
#           version: 19.03.13
#           docker_layer_caching: true
#       - run:
#           name: build docker
#           command:  |
#             docker build --tag tqhuy1996developer/go-service-hello-world .
#             docker login -u tqhuy1996developer -p 2abca984-516c-4c68-8fb3-9891b18edc96
#             docker push tqhuy1996developer/go-service-hello-world
#       - run:
#           name: init env
#           command:  |
#             echo 'export DO_ACCESS_TOKEN=08e49ce135b2da0b47fc5225acb993f8251524f9f4b8d99d0f6aa685e231439d' >> $BASH_ENV && source $BASH_ENV
#       - doctl/install
#       - doctl/initialize:
#           digitalocean-access-token:  DO_ACCESS_TOKEN
#       - run:
#           name: Deploy k8s Digital Ocean
#           command:  |
#             doctl kubernetes cluster kubeconfig save 2c09a317-88ea-452a-a562-e419ea865f2f
#             kubectl rollout restart deployment/deployment-golang
# workflows:
#   build_and_deploy:
#     jobs:
#       - build

# AWS ECS
# version: 2.1
# orbs:
#   aws-ecs: circleci/aws-ecs@2.0.0
#   aws-cli: circleci/aws-cli@2.0
# jobs:
#   build:
#     working_directory: ~/repo
#     docker:
#       - image: circleci/golang:1.16
#     steps:
#       - checkout
#       - aws-cli/setup
#       - setup_remote_docker:
#           version: 19.03.13
#           docker_layer_caching: true
#       - run:
#           name: setup env aws
#           command:  |
#             echo 'export AWS_ACCESS_KEY_ID=AKIA4BN5DNHYEERU6564' >> $BASH_ENV && source $BASH_ENV
#             echo 'export AWS_SECRET_ACCESS_KEY=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' >> $BASH_ENV && source $BASH_ENV
#             echo 'export AWS_DEFAULT_REGION=us-east-1' >> $BASH_ENV && source $BASH_ENV
#       - run:
#           name: build docker
#           command:  |
#             docker build --tag tqhuy1996developer/go-service-hello-world .
#             docker login -u tqhuy1996developer -p 2abca984-516c-4c68-8fb3-9891b18edc96
#             docker push tqhuy1996developer/go-service-hello-world
#   deploy:
#     - aws-ecs/deploy-service-update:
#         family: "go-docker"
#         cluster-name: "demo-ecs"
#         container-image-name-updates: "container=tqhuy1996developer/go-service-hello-world,tag=latest"
# workflows:
#   build_and_deploy:
#     jobs:
#       - build
version: '2.1'
orbs:
  aws-ecr: circleci/aws-ecr@6.15
  aws-ecs: circleci/aws-ecs@2.0.0
workflows:
  build-and-deploy:
    jobs:
      - aws-ecs/deploy-service-update:
          cluster-name: 'demo-ecs'
          container-image-name-updates: 'container=tqhuy1996developer/go-service-hello-world,tag=latest'
          family: 'go-docker'